<?php
namespace App\Controller\Component;

use Cake\Controller\Component;

/**
 * LanguageComponent component
 *Get user id by uuid
 */
class LanguageComponent extends Component {

	/**
	 * Default configuration.
	 *
	 * @var array
	 */
	protected $_defaultConfig = [

	];

	public function country2locale($code) {
		$arr = array(
			'ad' => 'ca',
			'ae' => 'ar',
			'af' => 'fa,ps,en',
			'ag' => 'en',
			'ai' => 'en',
			'al' => 'sq',
			'am' => 'hy',
			'an' => 'nl,en',
			'ao' => 'pt',
			'aq' => 'en',
			'ar' => 'es',
			'as' => 'en,sm',
			'at' => 'de',
			'au' => 'en',
			'aw' => 'nl,pap,en',
			'ax' => 'sv',
			'az' => 'az',
			'ba' => 'bs,hr,sr,en',
			'bb' => 'en',
			'bd' => 'bn',
			'be' => 'nl,fr,de,en',
			'bf' => 'fr',
			'bg' => 'bg',
			'bh' => 'ar',
			'bi' => 'fr',
			'bj' => 'fr',
			'bl' => 'fr',
			'bm' => 'en',
			'bn' => 'ms',
			'bo' => 'es,qu,ay,en',
			'br' => 'pt',
			'bq' => 'nl,en',
			'bs' => 'en',
			'bt' => 'dz',
			'bv' => 'no',
			'bw' => 'en,tn',
			'by' => 'be,ru',
			'bz' => 'en',
			'ca' => 'en,fr',
			'cc' => 'en',
			'cd' => 'fr',
			'cf' => 'fr',
			'cg' => 'fr',
			'ch' => 'de,fr,it,rm,en',
			'ci' => 'fr',
			'ck' => 'en,rar,en',
			'cl' => 'es',
			'cm' => 'fr,en',
			'cn' => 'zh',
			'co' => 'es',
			'cr' => 'es',
			'cu' => 'es',
			'cv' => 'pt',
			'cw' => 'nl',
			'cx' => 'en',
			'cy' => 'el,tr,en',
			'cz' => 'cs',
			'de' => 'de',
			'dj' => 'fr,ar,so,en',
			'dk' => 'da',
			'dm' => 'en',
			'do' => 'es',
			'dz' => 'ar',
			'ec' => 'es',
			'ee' => 'et',
			'eg' => 'ar',
			'eh' => 'ar,es,fr,en',
			'er' => 'ti,ar,en',
			'es' => 'es,ast,ca,eu,gl,en',
			'et' => 'am,om,en',
			'fi' => 'fi,sv,se,en',
			'fj' => 'en',
			'fk' => 'en',
			'fm' => 'en',
			'fo' => 'fo',
			'fr' => 'fr',
			'ga' => 'fr',
			'gb' => 'en,ga,cy,gd,kw',
			'gd' => 'en',
			'ge' => 'ka',
			'gf' => 'fr',
			'gg' => 'en',
			'gh' => 'en',
			'gi' => 'en',
			'gl' => 'kl,da,en',
			'gm' => 'en',
			'gn' => 'fr',
			'gp' => 'fr',
			'gq' => 'es,fr,pt',
			'gr' => 'el',
			'gs' => 'en',
			'gt' => 'es',
			'gu' => 'en,ch',
			'gw' => 'pt',
			'gy' => 'en',
			'hk' => 'zh,en',
			'hm' => 'en',
			'hn' => 'es',
			'hr' => 'hr',
			'ht' => 'fr,ht,en',
			'hu' => 'hu',
			'id' => 'id',
			'ie' => 'en,ga',
			'il' => 'he',
			'im' => 'en',
			'in' => 'hi,en',
			'io' => 'en',
			'iq' => 'ar,ku,en',
			'ir' => 'fa',
			'is' => 'is',
			'it' => 'it,de,fr,en',
			'je' => 'en',
			'jm' => 'en',
			'jo' => 'ar',
			'jp' => 'ja',
			'ke' => 'sw,en',
			'kg' => 'ky,ru,en',
			'kh' => 'km',
			'ki' => 'en',
			'km' => 'ar,fr,en',
			'kn' => 'en',
			'kp' => 'ko',
			'kr' => 'ko,en',
			'kw' => 'ar',
			'ky' => 'en',
			'kz' => 'kk,ru,en',
			'la' => 'lo',
			'lb' => 'ar,fr,en',
			'lc' => 'en',
			'li' => 'de',
			'lk' => 'si,ta,en',
			'lr' => 'en',
			'ls' => 'en,st',
			'lt' => 'lt',
			'lu' => 'lb,fr,de,en',
			'lv' => 'lv',
			'ly' => 'ar',
			'ma' => 'ar',
			'mc' => 'fr',
			'md' => 'ru,uk,ro,en',
			'me' => 'srp,sq,bs,hr,sr,en',
			'mf' => 'fr',
			'mg' => 'mg,fr,en',
			'mh' => 'en,mh',
			'mk' => 'mk',
			'ml' => 'fr',
			'mm' => 'my',
			'mn' => 'mn',
			'mo' => 'zh,en,pt',
			'mp' => 'ch',
			'mq' => 'fr',
			'mr' => 'ar,fr,en',
			'ms' => 'en',
			'mt' => 'mt,en',
			'mu' => 'mfe,fr,en',
			'mv' => 'dv',
			'mw' => 'en,ny',
			'mx' => 'es',
			'my' => 'ms,zh,en',
			'mz' => 'pt',
			'na' => 'en,sf,de',
			'nc' => 'fr',
			'ne' => 'fr',
			'nf' => 'en,pih',
			'ng' => 'en',
			'ni' => 'es',
			'nl' => 'nl',
			'no' => 'nb,nn,no,se,en',
			'np' => 'ne',
			'nr' => 'na,en',
			'nu' => 'niu,en',
			'nz' => 'en,mi',
			'om' => 'ar',
			'pa' => 'es',
			'pe' => 'es',
			'pf' => 'fr',
			'pg' => 'en,tpi,ho',
			'ph' => 'en,tl',
			'pk' => 'en,ur',
			'pl' => 'pl',
			'pm' => 'fr',
			'pn' => 'en,pih',
			'pr' => 'es,en',
			'ps' => 'ar,he,en',
			'pt' => 'pt',
			'pw' => 'en,pau,ja,sov,tox',
			'py' => 'es,gn,en',
			'qa' => 'ar',
			're' => 'fr',
			'ro' => 'ro',
			'rs' => 'sr',
			'ru' => 'ru',
			'rw' => 'rw,fr,en',
			'sa' => 'ar',
			'sb' => 'en',
			'sc' => 'fr,en,crs',
			'sd' => 'ar,en',
			'se' => 'sv',
			'sg' => 'en,ms,zh,ta',
			'sh' => 'en',
			'si' => 'sl',
			'sj' => 'no',
			'sk' => 'sk',
			'sl' => 'en',
			'sm' => 'it',
			'sn' => 'fr',
			'so' => 'so,ar,en',
			'sr' => 'nl',
			'st' => 'pt',
			'ss' => 'en',
			'sv' => 'es',
			'sx' => 'nl,en',
			'sy' => 'ar',
			'sz' => 'en,ss',
			'tc' => 'en',
			'td' => 'fr,ar,en',
			'tf' => 'fr',
			'tg' => 'fr',
			'th' => 'th',
			'tj' => 'tg,ru',
			'tk' => 'tkl,en,sm',
			'tl' => 'pt,tet,en',
			'tm' => 'tk',
			'tn' => 'ar',
			'to' => 'en',
			'tr' => 'tr',
			'tt' => 'en',
			'tv' => 'en',
			'tw' => 'zh',
			'tz' => 'sw,en',
			'ua' => 'uk',
			'ug' => 'en,sw',
			'um' => 'en',
			'us' => 'en,es',
			'uy' => 'es',
			'uz' => 'uz,kaa,en',
			'va' => 'it',
			'vc' => 'en',
			've' => 'es',
			'vg' => 'en',
			'vi' => 'en',
			'vn' => 'vi',
			'vu' => 'bi,en,fr',
			'wf' => 'fr',
			'ws' => 'sm,en',
			'ye' => 'ar',
			'yt' => 'fr',
			'za' => 'zu,xh,af,st,tn,en',
			'zm' => 'en',
			'zw' => 'en,sn,nd',
		);
		$langs = [
			'ab' => 'Abkhazian',
			'aa' => 'Afar',
			'af' => 'Afrikaans',
			'ak' => 'Akan',
			'sq' => 'Albanian',
			'am' => 'Amharic',
			'ar' => 'Arabic',
			'an' => 'Aragonese',
			'hy' => 'Armenian',
			'as' => 'Assamese',
			'av' => 'Avaric',
			'ae' => 'Avestan',
			'ay' => 'Aymara',
			'az' => 'Azerbaijani',
			'bm' => 'Bambara',
			'ba' => 'Bashkir',
			'eu' => 'Basque',
			'be' => 'Belarusian',
			'bn' => 'Bengali',
			'bh' => 'Bihari languages',
			'bi' => 'Bislama',
			'bs' => 'Bosnian',
			'br' => 'Breton',
			'bg' => 'Bulgarian',
			'my' => 'Burmese',
			'ca' => 'Catalan, Valencian',
			'km' => 'Central Khmer',
			'ch' => 'Chamorro',
			'ce' => 'Chechen',
			'ny' => 'Chichewa, Chewa, Nyanja',
			'zh' => 'Chinese',
			'cu' => 'Church Slavonic, Old Bulgarian, Old Church Slavonic',
			'cv' => 'Chuvash',
			'kw' => 'Cornish',
			'co' => 'Corsican',
			'cr' => 'Cree',
			'hr' => 'Croatian',
			'cs' => 'Czech',
			'da' => 'Danish',
			'dv' => 'Divehi, Dhivehi, Maldivian',
			'nl' => 'Dutch, Flemish',
			'dz' => 'Dzongkha',
			'en' => 'English',
			'eo' => 'Esperanto',
			'et' => 'Estonian',
			'ee' => 'Ewe',
			'fo' => 'Faroese',
			'fj' => 'Fijian',
			'fi' => 'Finnish',
			'fr' => 'French',
			'ff' => 'Fulah',
			'gd' => 'Gaelic, Scottish Gaelic',
			'gl' => 'Galician',
			'lg' => 'Ganda',
			'ka' => 'Georgian',
			'de' => 'German',
			'ki' => 'Gikuyu, Kikuyu',
			'el' => 'Greek (Modern)',
			'kl' => 'Greenlandic, Kalaallisut',
			'gn' => 'Guarani',
			'gu' => 'Gujarati',
			'ht' => 'Haitian, Haitian Creole',
			'ha' => 'Hausa',
			'he' => 'Hebrew',
			'hz' => 'Herero',
			'hi' => 'Hindi',
			'ho' => 'Hiri Motu',
			'hu' => 'Hungarian',
			'is' => 'Icelandic',
			'io' => 'Ido',
			'ig' => 'Igbo',
			'id' => 'Indonesian',
			'ia' => 'Interlingua (International Auxiliary Language Association)',
			'ie' => 'Interlingue',
			'iu' => 'Inuktitut',
			'ik' => 'Inupiaq',
			'ga' => 'Irish',
			'it' => 'Italian',
			'ja' => 'Japanese',
			'jv' => 'Javanese',
			'kn' => 'Kannada',
			'kr' => 'Kanuri',
			'ks' => 'Kashmiri',
			'kk' => 'Kazakh',
			'rw' => 'Kinyarwanda',
			'kv' => 'Komi',
			'kg' => 'Kongo',
			'ko' => 'Korean',
			'kj' => 'Kwanyama, Kuanyama',
			'ku' => 'Kurdish',
			'ky' => 'Kyrgyz',
			'lo' => 'Lao',
			'la' => 'Latin',
			'lv' => 'Latvian',
			'lb' => 'Letzeburgesch, Luxembourgish',
			'li' => 'Limburgish, Limburgan, Limburger',
			'ln' => 'Lingala',
			'lt' => 'Lithuanian',
			'lu' => 'Luba-Katanga',
			'mk' => 'Macedonian',
			'mg' => 'Malagasy',
			'ms' => 'Malay',
			'ml' => 'Malayalam',
			'mt' => 'Maltese',
			'gv' => 'Manx',
			'mi' => 'Maori',
			'mr' => 'Marathi',
			'mh' => 'Marshallese',
			'ro' => 'Moldovan, Moldavian, Romanian',
			'mn' => 'Mongolian',
			'na' => 'Nauru',
			'nv' => 'Navajo, Navaho',
			'nd' => 'Northern Ndebele',
			'ng' => 'Ndonga',
			'ne' => 'Nepali',
			'se' => 'Northern Sami',
			'no' => 'Norwegian',
			'nb' => 'Norwegian BokmÃ¥l',
			'nn' => 'Norwegian Nynorsk',
			'ii' => 'Nuosu, Sichuan Yi',
			'oc' => 'Occitan (post 1500)',
			'oj' => 'Ojibwa',
			'or' => 'Oriya',
			'om' => 'Oromo',
			'os' => 'Ossetian, Ossetic',
			'pi' => 'Pali',
			'pa' => 'Panjabi, Punjabi',
			'ps' => 'Pashto, Pushto',
			'fa' => 'Persian',
			'pl' => 'Polish',
			'pt' => 'Portuguese',
			'qu' => 'Quechua',
			'rm' => 'Romansh',
			'rn' => 'Rundi',
			'ru' => 'Russian',
			'sm' => 'Samoan',
			'sg' => 'Sango',
			'sa' => 'Sanskrit',
			'sc' => 'Sardinian',
			'sr' => 'Serbian',
			'sn' => 'Shona',
			'sd' => 'Sindhi',
			'si' => 'Sinhala, Sinhalese',
			'sk' => 'Slovak',
			'sl' => 'Slovenian',
			'so' => 'Somali',
			'st' => 'Sotho, Southern',
			'nr' => 'South Ndebele',
			'es' => 'Spanish, Castilian',
			'su' => 'Sundanese',
			'sw' => 'Swahili',
			'ss' => 'Swati',
			'sv' => 'Swedish',
			'tl' => 'Tagalog',
			'ty' => 'Tahitian',
			'tg' => 'Tajik',
			'ta' => 'Tamil',
			'tt' => 'Tatar',
			'te' => 'Telugu',
			'th' => 'Thai',
			'bo' => 'Tibetan',
			'ti' => 'Tigrinya',
			'to' => 'Tonga (Tonga Islands)',
			'ts' => 'Tsonga',
			'tn' => 'Tswana',
			'tr' => 'Turkish',
			'tk' => 'Turkmen',
			'tw' => 'Twi',
			'ug' => 'Uighur, Uyghur',
			'uk' => 'Ukrainian',
			'ur' => 'Urdu',
			'uz' => 'Uzbek',
			've' => 'Venda',
			'vi' => 'Vietnamese',
			'vo' => 'Volap_k',
			'wa' => 'Walloon',
			'cy' => 'Welsh',
			'fy' => 'Western Frisian',
			'wo' => 'Wolof',
			'xh' => 'Xhosa',
			'yi' => 'Yiddish',
			'yo' => 'Yoruba',
			'za' => 'Zhuang, Chuang',
			'zu' => 'Zulu',
		];
		#----

		$code = strtolower($code);
		if ($code == 'eu') {
			return 'en_GB';
		} elseif ($code == 'ap') {
			# Asia Pacific
			return 'en_US';
		} elseif ($code == 'cs') {
			return 'sr_RS';
		}
		#----
		if ($code == 'uk') {
			$code = 'gb';
		}
		$default['en'] = "English";
		if (array_key_exists($code, $arr)) {
			if (strpos($arr[$code], ',') !== false) {
				$new = explode(',', $arr[$code]);
				$loc = array();
				foreach ($new as $key => $val) {

					//	$loc[] = $val . '_' . strtoupper($code);
					if (array_key_exists($val, $langs)) {

						$loc[$val] = $langs[$val];

					}

				}

				return $loc; # string; comma-separated values 'en_GB,ga_GB,cy_GB,gd_GB,kw_GB'
			} else {
				//return $arr[$code] . '_' . strtoupper($code); # string 'en_US'
				$vals = $arr[$code];
				$new = ['en', $vals];

				foreach ($new as $key => $val) {

					//  $loc[] = $val . '_' . strtoupper($code);
					if (array_key_exists($val, $langs)) {

						$loc[$val] = $langs[$val];

					}

				}
				return $loc; # string 'en_US'
			}
		}
		return $default;

	}

}